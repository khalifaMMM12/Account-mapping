{"ast":null,"code":"import { useEffect, useRef } from 'react';\n/**\r\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\r\n * value is the one rendered with. Generally only required for Concurrent mode usage\r\n * where previous work in `render()` may be discarded before being used.\r\n *\r\n * This is safe to access in an event handler.\r\n *\r\n * @param value The `Ref` value\r\n */\n\nfunction useCommittedRef(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","map":{"version":3,"sources":["C:/Users/DEV. mmm/Documents/projects/Premium Pension/Agent mapping/Account-mapping/client/node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCommittedRef.js"],"names":["useEffect","useRef","useCommittedRef","value","ref","current"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAMC,GAAG,GAAGH,MAAM,CAACE,KAAD,CAAlB;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,GAAG,CAACC,OAAJ,GAAcF,KAAd;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAGA,SAAOC,GAAP;AACD;;AACD,eAAeF,eAAf","sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\n/**\r\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\r\n * value is the one rendered with. Generally only required for Concurrent mode usage\r\n * where previous work in `render()` may be discarded before being used.\r\n *\r\n * This is safe to access in an event handler.\r\n *\r\n * @param value The `Ref` value\r\n */\r\nfunction useCommittedRef(value) {\r\n  const ref = useRef(value);\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref;\r\n}\r\nexport default useCommittedRef;"]},"metadata":{},"sourceType":"module"}