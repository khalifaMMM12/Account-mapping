{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmmuhammad\\\\Desktop\\\\Account-mapping\\\\client\\\\src\\\\components\\\\Charts.js\";\nimport React from \"react\";\nimport Chartist from \"react-chartist\";\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\nexport const AUMChart = () => {\n  const data = {\n    labels: ['Zone', 'Branch', 'General'],\n    series: [[1, 3, 6]]\n  };\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: true,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: data,\n    options: { ...options,\n      plugins\n    },\n    type: \"Bar\",\n    className: \"ct-series-g ct-double-octave\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  });\n};\nexport const AUMChartphone = () => {\n  const data = {\n    labels: ['Zone', 'Branch', 'General'],\n    datasets: [{\n      label: 'zone',\n      data: [1, 2, 3],\n      borderColor: '#36A2EB',\n      backgroundColor: '#9BD0F5'\n    }, {\n      label: 'Branch',\n      data: [2, 3, 4],\n      borderColor: '#FF6384',\n      backgroundColor: '#FFB1C1'\n    }]\n  };\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: false,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: data,\n    options: { ...options,\n      plugins\n    },\n    type: \"Line\",\n    className: \"ct-series-g ct-major-tenth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  });\n};\nexport const CircleChart = props => {\n  const {\n    series = [],\n    donutWidth = 20\n  } = props;\n\n  const sum = (a, b) => a + b;\n\n  const options = {\n    low: 0,\n    high: 8,\n    donutWidth,\n    donut: true,\n    donutSolid: true,\n    fullWidth: false,\n    showLabel: false,\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: {\n      series\n    },\n    options: { ...options,\n      plugins\n    },\n    type: \"Pie\",\n    className: \"ct-golden-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  });\n};\nexport const BarChart = props => {\n  const {\n    labels = [],\n    series = [],\n    chartClassName = \"ct-golden-section\"\n  } = props;\n  const data = {\n    labels,\n    series\n  };\n  const options = {\n    low: 0,\n    showArea: true,\n    axisX: {\n      position: 'end'\n    },\n    axisY: {\n      showGrid: false,\n      showLabel: false,\n      offset: 0\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: data,\n    options: { ...options,\n      plugins\n    },\n    type: \"Bar\",\n    className: chartClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/mmmuhammad/Desktop/Account-mapping/client/src/components/Charts.js"],"names":["React","Chartist","ChartistTooltip","AUMChart","data","labels","series","options","low","showArea","fullWidth","axisX","position","showGrid","axisY","showLabel","labelInterpolationFnc","value","plugins","AUMChartphone","datasets","label","borderColor","backgroundColor","CircleChart","props","donutWidth","sum","a","b","high","donut","donutSolid","Math","round","reduce","BarChart","chartClassName","offset"],"mappings":"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","sourcesContent":["\r\nimport React from \"react\";\r\nimport Chartist from \"react-chartist\";\r\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\r\n\r\nexport const AUMChart = () => {\r\n  const data = {\r\n    labels: ['Zone', 'Branch', 'General'],\r\n    series: [[1, 3, 6,]]\r\n  };\r\n\r\n  const options = {\r\n    low: 0,\r\n    showArea: true,\r\n    fullWidth: true,\r\n    axisX: {\r\n      position: 'end',\r\n      showGrid: true\r\n    },\r\n    axisY: {\r\n      // On the y-axis start means left and end means right\r\n      showGrid: false,\r\n      showLabel: false,\r\n      labelInterpolationFnc: value => `$${value / 1}k`\r\n    }\r\n  };\r\n\r\n  const plugins = [\r\n    ChartistTooltip()\r\n  ]\r\n\r\n  return (\r\n    <Chartist data={data} options={{...options, plugins}} type=\"Bar\" className=\"ct-series-g ct-double-octave\" />\r\n  );\r\n};\r\n\r\nexport const AUMChartphone = () => {\r\n  const data = {\r\n    labels: ['Zone', 'Branch', 'General'],\r\n    datasets: [\r\n      {\r\n        label: 'zone',\r\n        data: [1, 2, 3],\r\n        borderColor: '#36A2EB',\r\n        backgroundColor: '#9BD0F5',\r\n      },\r\n      {\r\n        label: 'Branch',\r\n        data: [2, 3, 4],\r\n        borderColor: '#FF6384',\r\n        backgroundColor: '#FFB1C1',\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = {\r\n    low: 0,\r\n    showArea: true,\r\n    fullWidth: false,\r\n    axisX: {\r\n      position: 'end',\r\n      showGrid: true\r\n    },\r\n    axisY: {\r\n      // On the y-axis start means left and end means right\r\n      showGrid: false,\r\n      showLabel: false,\r\n      labelInterpolationFnc: value => `$${value / 1}k`\r\n    }\r\n  };\r\n\r\n  const plugins = [\r\n    ChartistTooltip()\r\n  ]\r\n\r\n  return (\r\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-major-tenth\" />\r\n  );\r\n};\r\n\r\nexport const CircleChart = (props) => {\r\n  const { series = [], donutWidth = 20 } = props;\r\n  const sum = (a, b) => a + b;\r\n\r\n  const options = {\r\n    low: 0,\r\n    high: 8,\r\n    donutWidth,\r\n    donut: true,\r\n    donutSolid: true,\r\n    fullWidth: false,\r\n    showLabel: false,\r\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`,\r\n  }\r\n\r\n  const plugins = [\r\n    ChartistTooltip()\r\n  ]\r\n\r\n  return (\r\n    <Chartist data={{ series }} options={{...options, plugins}} type=\"Pie\" className=\"ct-golden-section\" />\r\n  );\r\n};\r\n\r\nexport const BarChart = (props) => {\r\n  const { labels = [], series = [], chartClassName = \"ct-golden-section\" } = props;\r\n  const data = { labels, series };\r\n\r\n  const options = {\r\n    low: 0,\r\n    showArea: true,\r\n    axisX: {\r\n      position: 'end'\r\n    },\r\n    axisY: {\r\n      showGrid: false,\r\n      showLabel: false,\r\n      offset: 0\r\n    }\r\n  };\r\n\r\n  const plugins = [\r\n    ChartistTooltip()\r\n  ]\r\n\r\n  return (\r\n    <Chartist data={data} options={{...options, plugins}} type=\"Bar\" className={chartClassName} />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}